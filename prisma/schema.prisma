generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String    @unique
    password String
    role     UserRole  @default(USER)
    verified DateTime?

    provider   String?
    providerId String?

    cart             Cart?
    order            Order[]
    verificationCode VerificationCode?

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model Product {
    id          Int           @id @default(autoincrement())
    items       ProductItem[]
    name        String
    imageUrl    String
    createAt    DateTime      @default(now())
    undateAt    DateTime      @updatedAt
    ingredients Ingredient[]
    category    Category      @relation(fields: [categoryId], references: [id])
    categoryId  Int
}

model ProductItem {
    id        Int        @id @default(autoincrement())
    price     Int
    size      Int?
    pizzaType Int?
    cartItem  CartItem[]
    product   Product    @relation(fields: [productId], references: [id])
    productId Int
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[]
    createAt DateTime  @default(now())
    updateAt DateTime  @updatedAt
}

model Ingredient {
    id       Int        @id @default(autoincrement())
    name     String
    price    Int
    imageUrl String
    cartItem CartItem[]
    products Product[]
    createAt DateTime   @default(now())
    updateAt DateTime   @updatedAt
}

model Cart {
    id          Int        @id @default(autoincrement())
    user        User?      @relation(fields: [userId], references: [id])
    userId      Int?       @unique
    items       CartItem[]
    totalAmount Int        @default(0)
    token       String
    createAt    DateTime   @default(now())
    updateAt    DateTime   @updatedAt
}

model CartItem {
    id            Int          @id @default(autoincrement())
    productItem   ProductItem  @relation(fields: [productItemId], references: [id])
    productItemId Int
    cart          Cart         @relation(fields: [cartId], references: [id])
    cartId        Int
    quantity      Int          @default(1)
    ingredients   Ingredient[]
    createAt      DateTime     @default(now())
    updateAt      DateTime     @updatedAt
}

model Order {
    id          Int         @id @default(autoincrement())
    user        User?       @relation(fields: [userId], references: [id])
    userId      Int?
    token       String
    totalAmount Int
    status      OrderStatus
    paymentId   String?
    items       Json
    fullName    String
    address     String
    email       String
    phone       String
    comment     String?
    createAt    DateTime    @default(now())
    updateAt    DateTime    @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code     String
    createAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELED
}

enum UserRole {
    ADMIN
    USER
}
